// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Regent.Database;

namespace Regent.Migrations
{
    [DbContext(typeof(RegistryContext))]
    [Migration("20200229140650_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("Regent.Database.Device", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("comPort")
                        .HasColumnType("TEXT");

                    b.Property<string>("deviceCategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("deviceName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Regent.Database.Error", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("_error")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("Regent.Database.Event", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("_event")
                        .HasColumnType("TEXT");

                    b.Property<string>("cathegory")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("location")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("telemetryid")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("telemetryid");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Regent.Database.Telemetry", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("humidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("illumination")
                        .HasColumnType("INTEGER");

                    b.Property<int>("temperature")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Telemetry");
                });

            modelBuilder.Entity("Regent.Database.Event", b =>
                {
                    b.HasOne("Regent.Database.Telemetry", "telemetry")
                        .WithMany()
                        .HasForeignKey("telemetryid");
                });
#pragma warning restore 612, 618
        }
    }
}
